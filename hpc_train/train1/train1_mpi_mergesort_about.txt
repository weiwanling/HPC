//mpiexec -n 4 ./train2_mpi_mergesort g  16

Proc 0 > gi = g, global_n = 16, local_n = 4　　//0号线程开始
//step1  四个线程分配数据情况
0: 83 86 77 15 
1: 90 19 88 75 
2: 46 85 68 40 
3: 1 83 74 26 

Proc 0 > partner = 1, bitmask = 1    //0<-1
//step2
0: 15 19 75 77 83 86 88 90 
2: 1 26 40 46 68 74 83 85 

Proc 0 > partner = 2, bitmask = 2   //0<-2

//step3
0: 1 15 19 26 40 46 68 74 75 77 83 83 85 86 88 90 

//最终排序结果
The list is:
   1 15 19 26 40 46 68 74 75 77 83 83 85 86 88 90
 
Proc 2 > gi = g, global_n = 16, local_n = 4 //2号线程
Proc 2 > partner = 3, bitmask = 1      // 10^0f1=11  　2<-3        
Proc 2 > partner = 0, bitmask = 2       //10^10=00    2->0

Proc 1 > gi = g, global_n = 16, local_n = 4  //１号线程
Proc 1 > partner = 0, bitmask = 1            //1->0

Proc 3 > gi = g, global_n = 16, local_n = 4　//１号线程
Proc 3 > partner = 2, bitmask = 1          //3->2

my_rank     0       1   2       3
partner     1,2     0   3,1     2

//从０开始编号，线程个数为２的幂次
//奇数取异或  发送目标线程　减去１
//偶数异或　　接受目标线程　加１　减２